# To build a container, you will use the docker build command
# https://docs.docker.com/engine/reference/commandline/build/
#
#   docker build -t <IMAGE TAG> -f Dockerfile.serving .
#   docker build -t <IMAGE TAG> -f Dockerfile.jupyter .
#


# https://docs.docker.com/engine/reference/builder/#from
# You shouldn't need to change this
FROM python:3.7

# https://docs.docker.com/engine/reference/builder/#workdir
# Create and cd into /code as your working directory
WORKDIR /code


# The main docker commands you will find useful:
# 
# Add a file or directory
# https://docs.docker.com/engine/reference/builder/#add
#
#       ADD ./<SOURCE_DIR/FILE> ./<DOCKER_DIR/FILE>
#
# Run a shell command (tip: chain shell commands with && rather than multiple RUN commands)
# https://docs.docker.com/engine/reference/builder/#run
#
#       RUN <SHELL COMMAND>   
#
# Set an environment variable:
# https://docs.docker.com/engine/reference/builder/#env
#
#       ENV <ENV_VAR>=<DEFAULT>
#
# Expose a port
# https://docs.docker.com/engine/reference/builder/#port
#
#       EXPOSE <PORT>
#
# Provide default command for executing container
# https://docs.docker.com/engine/reference/builder/#cmd
#
#       CMD <SHELL COMMAND>



COPY streamlit_app.py
ADD /ift6578
COPY requirements.txt


RUN pip install -r requirements.txt


EXPOSE 8890

ENV COMET_API_KEY: ${COMET_API_KEY}

streamlit run streamlit_app.py --server.port 8890:8890 "--server.address=0.0.0.0" 
